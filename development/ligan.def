Bootstrap: docker
From: nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04

%environment
    export LC_ALL=C.UTF-8
    export LD_LIBRARY_PATH="/lib:/lib64:/usr/lib:/usr/local/lib:${LD_LIBRARY_PATH}"
    export PYTHONPATH="/usr/local/python"
    export RDBASE="/opt/rdkit"
%post
    export GNINA_VERSION="v1.0.1"
    export LIBMOLGRID_VERSION="v0.2.1"

    # Build variables
    export ROOTDIR=/opt
    export DEBIAN_FRONTEND=noninteractive
    
    # Execution variables
    export LC_ALL=C.UTF-8
    export LD_LIBRARY_PATH="/lib:/lib64:/usr/lib:/usr/local/lib:${LD_LIBRARY_PATH}"
    export PYTHONPATH="/usr/local/python"
    export RDBASE="${ROOTDIR}/rdkit"

    apt update -y
    apt upgrade -y

    apt install -y wget gnupg software-properties-common tzdata git libboost-all-dev libeigen3-dev \
    libgoogle-glog-dev libprotobuf-dev protobuf-compiler libhdf5-dev libatlas-base-dev libsqlite3-dev sqlite3 python3-dev python3-pip \
    libfreetype6-dev swig apt-transport-https ca-certificates graphviz
 
    wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
    apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'
    apt update
    apt install -y cmake build-essential

    update-alternatives --install /usr/bin/python python /usr/bin/python3 1
    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1

    pip install numpy pandas pytest scipy
    pip install torch torchvision torchaudio
    pip install GPUtil psutil pynvml
    pip install seaborn scikit-image parse protobuf
    pip install pydot
    pip install open3d

    git clone -b Release_2021_03_1 --depth=1 https://github.com/rdkit/rdkit.git "${ROOTDIR}/rdkit"
    cd "${ROOTDIR}/rdkit"
    mkdir build
    cd build
    cmake -DRDK_BUILD_MAEPARSER_SUPPORT=OFF -DRDK_BUILD_COORDGEN_SUPPORT=OFF ..
    make -j $(nproc)
    make install
    cp $RDBASE/lib/libRDKit* /usr/local/lib/
    cp -r $RDBASE/lib/cmake/* /usr/local/lib/cmake/
    cp -r $RDBASE/rdkit /usr/local/lib/python3.6/dist-packages/

    git clone --depth=1 -b openbabel-3-1-1 https://github.com/openbabel/openbabel.git "${ROOTDIR}/openbabel"
    cd "${ROOTDIR}/openbabel"
    mkdir build
    cd build
    cmake -DWITH_MAEPARSER=OFF -DWITH_COORDGEN=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON ..
    make -j $(nproc)
    make install

    git clone --depth=1 -b "$LIBMOLGRID_VERSION" https://github.com/gnina/libmolgrid.git "${ROOTDIR}/libmolgrid"
    cd "${ROOTDIR}/libmolgrid"
    mkdir build
    cd build
    cmake ..
    make -j $(nproc)
    make install

    git clone --depth=1 -b "${GNINA_VERSION}" https://github.com/gnina/gnina.git "${ROOTDIR}/gnina"
    cd "${ROOTDIR}/gnina"
    mkdir build
    cd build
    cmake -DBUILD_docs=OFF -DCUDA_ARCH_NAME=All ..
    make -j $(nproc)
    make install

%test
    echo "Testing Python installation..."

    VERSION=$(python -c "import rdkit;print(rdkit.__version__)")
    if [ $? -eq 0 ]; then echo "RDKIT $VERSION is installed"; else echo "RDKIT installation FAILED"; exit 1; fi

    VERSION=$(python -c "import openbabel;print(openbabel.__version__)")
    if [ $? -eq 0 ]; then echo "Openbabel $VERSION is installed"; else echo "Openbabel installation FAILED"; exit 1; fi

    FILE=$(python -c "import molgrid;print(molgrid.__file__)")
    if [ $? -eq 0 ]; then echo "molgrid is installed"; else echo "molgrid installation FAILED"; exit 1; fi

    VERSION=$(python -c "import caffe;print(caffe.__version__)")
    if [ $? -eq 0 ]; then echo "Caffe $VERSION is installed"; else echo "Caffe installation FAILED"; exit 1; fi

    echo "Python installation is OK"

%apprun gnina
    echo "Running gnina with the following parameters: $*"
    exec gnina "$@"
%apphelp gnina
    Run gnina

%apprun python
    echo "Running python with the following parameters: $*"
    exec python "$@"
%apphelp python
    Run Python

%help
    liGAN container (unofficial): https://github.com/mattragoza/liGAN

    Based on definition file originally written by Sebastien Buchoux (@seb-buch).
